//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Interop.Ecore
{
    
    
    /// <summary>
    /// The public interface for EReference
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(EReference))]
    [XmlDefaultImplementationTypeAttribute(typeof(EReference))]
    public interface IEReference : IModelElement, IEStructuralFeature
    {
        
        /// <summary>
        /// The containment property
        /// </summary>
        Nullable<bool> Containment
        {
            get;
            set;
        }
        
        /// <summary>
        /// The resolveProxies property
        /// </summary>
        Nullable<bool> ResolveProxies
        {
            get;
            set;
        }
        
        /// <summary>
        /// The eOpposite property
        /// </summary>
        IEReference EOpposite
        {
            get;
            set;
        }
        
        /// <summary>
        /// The eKeys property
        /// </summary>
        IListExpression<IEAttribute> EKeys
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Containment property changes its value
        /// </summary>
        event EventHandler ContainmentChanging;
        
        /// <summary>
        /// Gets fired when the Containment property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ContainmentChanged;
        
        /// <summary>
        /// Gets fired before the ResolveProxies property changes its value
        /// </summary>
        event EventHandler ResolveProxiesChanging;
        
        /// <summary>
        /// Gets fired when the ResolveProxies property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ResolveProxiesChanged;
        
        /// <summary>
        /// Gets fired before the EOpposite property changes its value
        /// </summary>
        event EventHandler EOppositeChanging;
        
        /// <summary>
        /// Gets fired when the EOpposite property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> EOppositeChanged;
    }
}

