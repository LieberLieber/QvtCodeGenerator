//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using LL.MDE.Components.Qvt.Metamodel.EMOF;
using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace LL.MDE.Components.Qvt.Metamodel.EssentialOCL
{
    
    
    /// <summary>
    /// The public interface for TupleLiteralPart
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TupleLiteralPart))]
    [XmlDefaultImplementationTypeAttribute(typeof(TupleLiteralPart))]
    public interface ITupleLiteralPart : IModelElement, ITypedElement
    {
        
        /// <summary>
        /// The attribute property
        /// </summary>
        IProperty Attribute
        {
            get;
            set;
        }
        
        /// <summary>
        /// The tupleLiteralExp property
        /// </summary>
        ITupleLiteralExp TupleLiteralExp
        {
            get;
            set;
        }
        
        /// <summary>
        /// The value property
        /// </summary>
        IOclExpression Value
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Attribute property changes its value
        /// </summary>
        event EventHandler AttributeChanging;
        
        /// <summary>
        /// Gets fired when the Attribute property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> AttributeChanged;
        
        /// <summary>
        /// Gets fired when the TupleLiteralExp property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> TupleLiteralExpChanged;
        
        /// <summary>
        /// Gets fired before the Value property changes its value
        /// </summary>
        event EventHandler ValueChanging;
        
        /// <summary>
        /// Gets fired when the Value property changed its value
        /// </summary>
        event EventHandler<ValueChangedEventArgs> ValueChanged;
    }
}

