// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 14.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace LL.MDE.Components.Qvt.QvtCodeGenerator.CodeGeneration.RelationTemplate
{
    using LL.MDE.Components.Qvt.Common;
    using LL.MDE.Components.Qvt.Metamodel.CustomExtensions.EMOFExtensions;
    using LL.MDE.Components.Qvt.Metamodel.QVTTemplate;
    using LL.MDE.Components.Qvt.QvtCodeGenerator.Analysis;
    using LL.MDE.Components.Qvt.QvtCodeGenerator.CodeGeneration;
    using LL.MDE.Components.Qvt.QvtCodeGenerator.CodeGeneration.RelationTemplate;
    using LL.MDE.Components.Qvt.QvtCodeGenerator.Utils;
    using NMF.Utilities;
    using System.Linq;
    using System.Collections.Generic;
    using LL.MDE.Components.Qvt.Metamodel.EssentialOCL;
    using LL.MDE.Components.Qvt.Metamodel.QVTBase;
    using LL.MDE.Components.Qvt.Metamodel.QVTRelation;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public partial class RelationHelperTemplate : RelationHelperTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(" \r\n\r\n");
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 18 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"



    public void GenerateDictionnaryClass(IRelation relation, IList<IRelationDomain> domains, bool checkOnly)
    {
        string dictTypes = string.Join(",", domains.Select(d => d.RootVariable.Type.Name));

        string className = checkOnly ? "CheckOnlyDomains" : "EnforceDomains";
        
        
        #line default
        #line hidden
        
        #line 26 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public class ");

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" : Tuple<");

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(dictTypes));

        
        #line default
        #line hidden
        
        #line 26 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(">\r\n\t\t{");

        
        #line default
        #line hidden
        
        #line 27 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
 

	foreach (IRelationDomain dictVariable in domains)
	{
	    
        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public ");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(dictVariable.RootVariable.Type.Name));

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(dictVariable.RootVariable.Name));

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("  { get { return Item");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(domains.IndexOf(dictVariable) + 1));

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("; } } ");

        
        #line default
        #line hidden
        
        #line 31 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	}
        RelationTemplateHelper.GenerateRelationParams(true, relation, null, true, false);
        string paramsWithType = string.Join(",",domains.Select(d => d.RootVariable.Type.Name + " " + d.RootVariable.Name));
        string paramsWithoutType = string.Join(",",domains.Select(d => d.RootVariable.Name));
        
        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public ");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(className));

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(paramsWithType));

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(") : base(");

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(paramsWithoutType));

        
        #line default
        #line hidden
        
        #line 36 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("){}\r\n\t}");

        
        #line default
        #line hidden
        
        #line 37 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

    }


    public void GenerateDictionnaryClasses(IRelation relation)
    {
        IList<IRelationDomain> dictVariableCheck = relation.Domain.OfType<IRelationDomain>().Where(d => !d.IsEnforceable.GetValueOrDefault()).ToList();
        IList<IRelationDomain> dictVariablesEnforce = relation.Domain.OfType<IRelationDomain>().Where(d => d.IsEnforceable.GetValueOrDefault()).ToList();
        GenerateDictionnaryClass(relation, dictVariableCheck, true);
        GenerateDictionnaryClass(relation, dictVariablesEnforce, false);
    }

    public void GenerateFindPreviousResultMethod(IRelation relation)
    {
        
        
        #line default
        #line hidden
        
        #line 51 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public EnforceDomains FindPreviousResult(");

        
        #line default
        #line hidden
        
        #line 51 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsCheckonly(true,relation)));

        
        #line default
        #line hidden
        
        #line 51 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(")\r\n\t\t{\r\n\t\tCheckOnlyDomains input = new CheckOnlyDomains(");

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsCheckonly(false,relation)));

        
        #line default
        #line hidden
        
        #line 53 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n\t\treturn traceabilityMap.ContainsKey(input) ? traceabilityMap[input] : null;\r" +
        "\n\t}");

        
        #line default
        #line hidden
        
        #line 55 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

    }

    public void GenerateMatchClasses(IRelation relation, RelationAnalysisResult analysisResult)
    {
        foreach (IRelationDomain domain in relation.Domain.OfType<IRelationDomain>().Where(d => d.TypedModel != null))
        {
            DomainVariablesBindingsResult domainAnalysisResult = analysisResult.GetResultOf(domain);

            // Domain match Class declaration
            
        
        #line default
        #line hidden
        
        #line 65 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal class ");

        
        #line default
        #line hidden
        
        #line 65 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(domain)));

        
        #line default
        #line hidden
        
        #line 65 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" {");

        
        #line default
        #line hidden
        
        #line 65 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

		
        foreach (IVariable variableItCanBind in  domainAnalysisResult.VariablesItCanBind)
        {
            
        
        #line default
        #line hidden
        
        #line 69 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public ");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(variableItCanBind.Type.GetRealTypeName()));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(variableItCanBind.Name));

        
        #line default
        #line hidden
        
        #line 69 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(";\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 70 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        } 

		
        
        #line default
        #line hidden
        
        #line 73 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("}");

        
        #line default
        #line hidden
        
        #line 73 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        }

        // Check result Class declaration
        
        
        #line default
        #line hidden
        
        #line 77 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal class ");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("  {");

        
        #line default
        #line hidden
        
        #line 77 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"


	foreach (IRelationDomain domain in relation.Domain.OfType<IRelationDomain>().Where(d => !d.IsEnforceable.GetValueOrDefault() && (d.TypedModel != null)))
	{
	    
        
        #line default
        #line hidden
        
        #line 81 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("public ");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(domain)));

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" matchDomain");

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(Util.ToFirstUpper(domain.RootVariable.Name)));

        
        #line default
        #line hidden
        
        #line 81 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(";\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 82 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	} 

	
        
        #line default
        #line hidden
        
        #line 85 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("}");

        
        #line default
        #line hidden
        
        #line 85 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

    }

	public void GenerateDomainCheckMethod(IRelationDomain domain, DomainVariablesBindingsResult analysisResult)
	{
	    ISet<IVariable> bindedSoFar = new HashSet<IVariable>();
	    
        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal static ISet<");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(domain)));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckDomainMethodName(domain)));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" (");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(domain.RootVariable.Type.GetRealTypeName()));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(domain.RootVariable.Name));

        
        #line default
        #line hidden
        
        #line 91 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(") {\r\n\t\t\tISet<");

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(domain)));

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> result = new HashSet<");

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(domain)));

        
        #line default
        #line hidden
        
        #line 92 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(">();\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateDomainCheckMethodContent(domain, bindedSoFar, analysisResult)));

        
        #line default
        #line hidden
        
        #line 93 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\treturn result;\r\n\t\t}");

        
        #line default
        #line hidden
        
        #line 95 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	}

	public void GenerateEnforceDomainMethods(IRelation relation, ITypedModel targetParam, RelationAnalysisResult analysisResult, bool useMetamodelInterface)
	{
	    List<IRelationDomain> targetDomains = relation.Domain.Where(d => d.IsEnforceable.GetValueOrDefault() && d.TypedModel == targetParam).OfType<IRelationDomain>().ToList();
		List<IRelationDomain> sourceDomains = relation.Domain.Where(d => !targetDomains.Contains(d)).OfType<IRelationDomain>().ToList();
		ISet<IVariable> bindedSoFar = new HashSet<IVariable>();
		  ISet<IRelationCallExp> relationCallsWhen = new HashSet<IRelationCallExp>();
		if (relation.When != null)
        {
            relationCallsWhen.AddRange(relation.When.Predicate.Select(p => p.ConditionExpression).OfType<IRelationCallExp>());
        }
	    foreach (IRelationDomain targetDomain in targetDomains)
	    {
	        DomainVariablesBindingsResult targetDomainAnalysisResult = analysisResult.GetResultOf(targetDomain);
			IList<string> args = new List<string>();
			args.AddRange(targetDomainAnalysisResult.VariablesRequired().Select(v => v.Type.GetRealTypeName() + " " + v.Name));
	        args.Add(targetDomain.RootVariable.Type.GetRealTypeName() + " " + targetDomain.RootVariable.Name);
	        
        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal ");

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("  ");

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.EnforceDomainMethodName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" (");

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" checkresult, ");

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",",args )));

        
        #line default
        #line hidden
        
        #line 114 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(") {\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" match = new ");

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("();");

        
        #line default
        #line hidden
        
        #line 115 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"



				foreach (IRelationDomain sourceDomain in sourceDomains.Where(d=>d.TypedModel != null))
				{
					string bindingsContainer = "checkresult." + QvtCodeGeneratorStrings.MatchDomainFieldName(sourceDomain);
					
        
        #line default
        #line hidden
        
        #line 121 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExtractVariablesFromMatch(analysisResult.GetResultOf(sourceDomain), bindedSoFar, bindingsContainer, true)));

        
        #line default
        #line hidden
        
        #line 121 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 122 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

				}

				
				// Generating calls to when relations, if needed
				if (!relationCallsWhen.IsNullOrEmpty())
				{
					
        
        #line default
        #line hidden
        
        #line 129 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("// Querying when relations and storing results ");

        
        #line default
        #line hidden
        
        #line 129 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

					foreach (IRelationCallExp relationCallWhen in relationCallsWhen)
					{
					
        
        #line default
        #line hidden
        
        #line 132 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("//var ");

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.RelationClassName(relationCallWhen.ReferredRelation)));

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("Result =  ");

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateAssignmentsFromRelationCall(relationCallWhen, useMetamodelInterface)));

        
        #line default
        #line hidden
        
        #line 132 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ;\r\n\t\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 133 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"


					}
				}

				// TODO not construct objects when can be queried
				
        
        #line default
        #line hidden
        
        #line 139 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateConstructTarget(targetDomain, useMetamodelInterface)));

        
        #line default
        #line hidden
        
        #line 139 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\r\n\t\t\t\t\r\n\t\t\t\t// Return newly binded variables\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 143 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	        foreach (IVariable variable in targetDomainAnalysisResult.VariablesItCanBind)
	        {
	            
        
        #line default
        #line hidden
        
        #line 146 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\t\t\t\tmatch.");

        
        #line default
        #line hidden
        
        #line 147 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(variable.Name));

        
        #line default
        #line hidden
        
        #line 147 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("  = ");

        
        #line default
        #line hidden
        
        #line 147 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(variable.Name));

        
        #line default
        #line hidden
        
        #line 147 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("; \r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 148 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	        }
				
        
        #line default
        #line hidden
        
        #line 150 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("return match;}");

        
        #line default
        #line hidden
        
        #line 150 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	    }
	}

    public void GenerateCheckAndEnforceMethod(IRelation relation)
    {
        // Method signature
        
        
        #line default
        #line hidden
        
        #line 157 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(relation.IsTopLevel.GetValueOrDefault(false) ? "public" : "internal"));

        
        #line default
        #line hidden
        
        #line 157 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" void CheckAndEnforce(");

        
        #line default
        #line hidden
        
        #line 157 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",", relation.Domain.Cast<RelationDomain>().Select(d => d.RootVariable.Type.GetRealTypeName() + " " + d.RootVariable.Name))));

        
        #line default
        #line hidden
        
        #line 157 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ) { ");

        
        #line default
        #line hidden
        
        #line 157 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"


		IList<string> dictVariablesEnforce = relation.Domain.OfType<IRelationDomain>().Where(d => d.IsEnforceable.GetValueOrDefault()).Select(d=>d.RootVariable.Name).ToList();
		string enforceParams = string.Join(",",dictVariablesEnforce);
		
        
        #line default
        #line hidden
        
        #line 161 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" \r\n\t\t    CheckOnlyDomains input = new CheckOnlyDomains(");

        
        #line default
        #line hidden
        
        #line 162 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsCheckonly(false,relation)));

        
        #line default
        #line hidden
        
        #line 162 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n            EnforceDomains output = new EnforceDomains(");

        
        #line default
        #line hidden
        
        #line 163 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(enforceParams));

        
        #line default
        #line hidden
        
        #line 163 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(@");
		    if (traceabilityMap.ContainsKey(input) && !traceabilityMap[input].Equals(output))
		    {
		        throw new Exception(""This relation has already been used with different enforced parameters!"");
		    }
		    if (!traceabilityMap.ContainsKey(input))
		    {
                ISet<");

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> result = ");

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckMethodName()));

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" (");

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsCheckonly(false, relation)));

        
        #line default
        #line hidden
        
        #line 170 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n                Enforce(result, ");

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsEnforce(false, relation)));

        
        #line default
        #line hidden
        
        #line 171 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n\t\t        traceabilityMap[input] = output;\r\n\t\t    }\r\n\t\t\t\r\n\t\t}");

        
        #line default
        #line hidden
        
        #line 175 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

    }

    public void GenerateEnforceMethod(IRelation relation, RelationAnalysisResult analysisResult, bool useMetamodelInterface)
    {
        List<IRelationDomain> targetDomains = relation.Domain.Where(d => d.IsEnforceable.GetValueOrDefault()).OfType<IRelationDomain>().ToList();
        List<IRelationDomain> sourceDomains = relation.Domain.Where(d => !targetDomains.Contains(d)).OfType<IRelationDomain>().ToList();
        ISet<IVariable> bindedSoFar = new HashSet<IVariable>();
      
        // Method declaration
        
        
        #line default
        #line hidden
        
        #line 185 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal void Enforce (ISet<");

        
        #line default
        #line hidden
        
        #line 185 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 185 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> result, ");

        
        #line default
        #line hidden
        
        #line 185 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsEnforce(true, relation, bindedSoFar)));

        
        #line default
        #line hidden
        
        #line 185 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ) {\r\n\r\n\t\tforeach (");

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 187 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" match in result)\r\n\t\t{\r\n\t\t\t// Extracting variables binded in source domains\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 190 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        // Generating the extraction of variables from the checking result
        foreach (IRelationDomain sourceDomain in sourceDomains)
        {
            string bindingsContainer = "match." + QvtCodeGeneratorStrings.MatchDomainFieldName(sourceDomain);
            
        
        #line default
        #line hidden
        
        #line 195 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExtractVariablesFromMatch(analysisResult.GetResultOf(sourceDomain), bindedSoFar, bindingsContainer)));

        
        #line default
        #line hidden
        
        #line 195 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 196 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        }



        // Generating assignments from where clause
        if (relation.Where != null)
        {
            
        
        #line default
        #line hidden
        
        #line 204 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" \r\n\r\n\t\t// Assigning variables binded in the where clause\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 207 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

            foreach (Assignment assignment in relation.Where.Predicate.Select(p => p.ConditionExpression).OfType<Assignment>())
            {
                
        
        #line default
        #line hidden
        
        #line 210 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExpression(assignment, useMetamodelInterface) + ";"));

        
        #line default
        #line hidden
        
        #line 210 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 211 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

            }
        }
        // Generating call to enforce methods of target domains
        
        
        #line default
        #line hidden
        
        #line 215 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" \r\n\r\n\t\t// Enforcing each enforced domain\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 218 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        foreach (IRelationDomain targetDomain in targetDomains)
        {
			
            DomainVariablesBindingsResult targetDomainAnalysisResult = analysisResult.GetResultOf(targetDomain);

			IList<string> args = new List<string>();
			args.AddRange(targetDomainAnalysisResult.VariablesRequired().Select(v=>v.Name));
	        args.Add(targetDomain.RootVariable.Name);

            
        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" target");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.EnforceDomainMethodName(targetDomain)));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("(match, ");

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",",args)));

        
        #line default
        #line hidden
        
        #line 228 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 229 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        }

        // Generating variables extraction from the resulting target domains
        
        
        #line default
        #line hidden
        
        #line 233 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" \r\n\r\n\t\t// Retrieving variables binded in the enforced domains\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 236 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        foreach (IRelationDomain targetDomain in targetDomains)
        {
            string bindingsContainer = "target" + QvtCodeGeneratorStrings.MatchDomainClassName(targetDomain);
            
        
        #line default
        #line hidden
        
        #line 240 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExtractVariablesFromMatch(analysisResult.GetResultOf(targetDomain), bindedSoFar, bindingsContainer)));

        
        #line default
        #line hidden
        
        #line 240 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 241 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

        }

        // Generating relation calls from where clause
        if (relation.Where != null)
        {
            
        
        #line default
        #line hidden
        
        #line 247 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" \r\n\t\t// Calling other relations as defined in the where clause\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 249 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

            foreach (IRelationCallExp relationCall in relation.Where.Predicate.Select(p => p.ConditionExpression).OfType<IRelationCallExp>())
            {
                
        
        #line default
        #line hidden
        
        #line 252 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExpression(relationCall, useMetamodelInterface) + ";"));

        
        #line default
        #line hidden
        
        #line 252 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 253 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

            }
        }
		
        
        #line default
        #line hidden
        
        #line 256 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("}}}");

        
        #line default
        #line hidden
        
        #line 256 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

    }
	public void GenerateCheckMethod(IRelation relation, RelationAnalysisResult analysisResult)
	{
	    ISet<IVariable> bindedSoFar = new HashSet<IVariable>();

	    // Check method declaration
	    
        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("internal static ISet<");

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckMethodName()));

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("( ");

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateRelationParamsCheckonly(true, relation, bindedSoFar)));

        
        #line default
        #line hidden
        
        #line 263 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ) {\r\n\r\n\t\t\tISet<");

        
        #line default
        #line hidden
        
        #line 265 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 265 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> result = new HashSet<");

        
        #line default
        #line hidden
        
        #line 265 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 265 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(">();");

        
        #line default
        #line hidden
        
        #line 265 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"


	    // Generating the calls to each check domain method
	    foreach (RelationDomain checkonlyDomain in relation.Domain.OfType<RelationDomain>().Where(d => !d.IsEnforceable.GetValueOrDefault() && (d.TypedModel != null)))
	    {
	        
        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("ISet<");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("s = ");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckDomainMethodName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(checkonlyDomain.RootVariable.Name));

        
        #line default
        #line hidden
        
        #line 270 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(");\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 271 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	    }
	    List<IRelationDomain> checkonlyDomains = relation.Domain.OfType<IRelationDomain>().Where(d => !d.IsEnforceable.GetValueOrDefault() && (d.TypedModel != null)).ToList();

	    // Generating beginining of one foreach loop per set of of matches of each domain
	    foreach (IRelationDomain checkonlyDomain in checkonlyDomains)
	    {
	        
        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("foreach (");

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainClassName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" in ");

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 278 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("s ) {\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 279 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	    }

	    // We have to keep track of the number of conditionnals (ie "if(){" )we start from now on
	    int nbConditionals = 0;

	    // Generate tests that variables common to different domains are equal
	    List<IRelationDomain> orderedCheckonlyDomains = checkonlyDomains.ToList();
	    foreach (IRelationDomain checkonlyDomain1 in orderedCheckonlyDomains)
	    {
	        int startIndex = orderedCheckonlyDomains.IndexOf(checkonlyDomain1) + 1;
	        int nbRemaining = orderedCheckonlyDomains.Count - startIndex;
	        foreach (IRelationDomain checkonlyDomain2 in orderedCheckonlyDomains.GetRange(startIndex, nbRemaining))
	        {
	            ISet<IVariable> commonBindedVariables =
	                new HashSet<IVariable>(analysisResult.GetResultOf(checkonlyDomain1).VariablesItCanBind);
	            ISet<IVariable> binded2 =
	                new HashSet<IVariable>(analysisResult.GetResultOf(checkonlyDomain2).VariablesItCanBind);
	            commonBindedVariables.IntersectWith(binded2);

	            List<string> conditions = new List<string>();
	            foreach (IVariable commonBindedVariable in commonBindedVariables)
	            {
	                conditions.Add(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain1) + "." + commonBindedVariable.Name + "==" + QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain2) + "." + commonBindedVariable.Name);
	            }
	            if (conditions.Any())
	            {
	                
        
        #line default
        #line hidden
        
        #line 306 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("if (");

        
        #line default
        #line hidden
        
        #line 306 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" && ", conditions)));

        
        #line default
        #line hidden
        
        #line 306 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(") {");

        
        #line default
        #line hidden
        
        #line 306 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	                nbConditionals++;
	            }
	        }
	    }

	    // At this point all the variables have been compared and are hence valid. We can generate code to extract them from the domains.
	    foreach (IRelationDomain checkonlyDomain in checkonlyDomains)
	    {
	        
        
        #line default
        #line hidden
        
        #line 315 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(RelationTemplateHelper.GenerateExtractVariablesFromMatch(analysisResult.GetResultOf(checkonlyDomain), bindedSoFar, QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain))));

        
        #line default
        #line hidden
        
        #line 315 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 316 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	    }

	    // Finally we can generate tests for csharp constraints that require such variables
	    // TODO test that all the required variables are indeed provided, before using them (otherwise compilation error, probably)
	    foreach (IRelationDomain checkonlyDomain1 in orderedCheckonlyDomains)
	    {
	        ICollection<IPropertyTemplateItem> propertyTemplateItemsRequiringVariables =
	            analysisResult.GetResultOf(checkonlyDomain1).IPropertyTemplateItemToVariablesRequired.Keys;
	        List<string> conditions = new List<string>();
	        foreach (IPropertyTemplateItem propertyTemplateItemRequiringVariable in propertyTemplateItemsRequiringVariables)
	        {
	            string containerVar = propertyTemplateItemRequiringVariable.ObjContainer.BindsTo.Name;
	            string property = propertyTemplateItemRequiringVariable.ReferredProperty.Name;
	            conditions.Add(containerVar + "." + property + " == (" + RelationTemplateHelper.GenerateExpression(propertyTemplateItemRequiringVariable.Value, true) + ")");
	        }
	        if (conditions.Any())
	        {
	            
        
        #line default
        #line hidden
        
        #line 334 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("if(");

        
        #line default
        #line hidden
        
        #line 334 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" && ", conditions)));

        
        #line default
        #line hidden
        
        #line 334 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(") {");

        
        #line default
        #line hidden
        
        #line 334 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	            nbConditionals++;
	        }
	    }

	    // Generate code to create a "CheckonlyMatch" object
	    
        
        #line default
        #line hidden
        
        #line 340 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 340 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" checkonlysMatch = new ");

        
        #line default
        #line hidden
        
        #line 340 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.CheckResultClassName(relation)));

        
        #line default
        #line hidden
        
        #line 340 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" () {");

        
        #line default
        #line hidden
        
        #line 340 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

		foreach (IRelationDomain checkonlyDomain in checkonlyDomains)
		{
		    
        
        #line default
        #line hidden
        
        #line 343 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(QvtCodeGeneratorStrings.MatchDomainFieldName(checkonlyDomain)));

        
        #line default
        #line hidden
        
        #line 343 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write(",\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 344 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

		} 

		
        
        #line default
        #line hidden
        
        #line 347 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("};\r\n\t\tresult.Add(checkonlysMatch);");

        
        #line default
        #line hidden
        
        #line 348 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"


		for (int i = 0; i < nbConditionals; i++)
		{
		    
        
        #line default
        #line hidden
        
        #line 352 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\t\t\t} // End if\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 354 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

		}

		foreach (IRelationDomain _ in checkonlyDomains)
		{
		    
        
        #line default
        #line hidden
        
        #line 359 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\t\t\t} // End foreach\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 361 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

		}
	
	
	
	
        
        #line default
        #line hidden
        
        #line 366 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"
this.Write("\treturn result;\r\n\t}\r\n\t");

        
        #line default
        #line hidden
        
        #line 369 "C:\Users\ebousse\Source\Repos\ChristianDopplerLabors\Software\QvtEnginePerformance\trunk\src\LL.MDE.Components.Qvt.CodeGenerator\CodeGeneration\RelationTemplate\RelationHelperTemplate.tt"

	}
 
 
 
        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "14.0.0.0")]
    public class RelationHelperTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
